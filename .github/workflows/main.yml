name: Continuous Build

on:
  push:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

env:
  TARGET_NODE_VERSION: '14.17.1'
  PUBLIC_URL: './'
  REACT_APP_COMMIT_HASH: ${{ github.sha }}
  REACT_APP_PUBLIC_URL: 'https://operations-development.s3.amazonaws.com/${{ github.sha }}/explorer'

jobs:
  documentation:
    name: Check documentation
    runs-on: ubuntu-latest
    steps:
      - name: Clone
        uses: actions/checkout@v2
      - name: Check hyperlinks
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          config-file: .github/workflows/mlc_config.json

  lint-build-test-publish:
    name: Lint, build, validate, test, export to S3
    runs-on: ubuntu-latest
    steps:
      - name: Clone
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.TARGET_NODE_VERSION }}
          cache: 'yarn'
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Lint
        run: yarn lint
      - name: Build
        run: yarn build
      - name: Validate
        run: yarn validate
      - name: Test
        run: yarn test
      - name: Pack
        run: yarn pack
      - name: Cache Packed Operations
        id: cache-packed-operations
        uses: actions/cache@v3
        with:
          path: api3-operations-v0.0.1-d.tgz
          key: ${{ github.sha }}-pack
      - name: Export S3 Payloads
        run: yarn export-ops-json-payloads
      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Upload JSON Payloads with commit hash to S3
        run: aws s3 cp json-exports s3://operations-development/${{ github.sha }} --acl public-read --recursive
      - name: Upload JSON Payloads as latest to S3
        run: aws s3 sync s3://operations-development/${{ github.sha }} s3://operations-development/latest --acl public-read

  build-explorer:
    name: Build the API3 Explorer
    runs-on: ubuntu-latest
    needs: [lint-build-test-publish]
    steps:
      - name: Clone
        uses: actions/checkout@v3
        with:
          repository: 'api3dao/api3-explorer'
          ref: 'remove-relative-homepage'
          token: ${{secrets.EXPLORER_PAT}}
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.TARGET_NODE_VERSION }}
      - name: Install Dependencies
        run: yarn install
      - name: Retrieve Cached Packed Operations
        id: cache-packed-operations
        uses: actions/cache@v3
        with:
          path: api3-operations-v0.0.1-d.tgz
          key: ${{ github.sha }}-pack
      - name: Unpack Operations
        run: |
          rm -rf node_modules/@api3/operations &&
          tar xvf api3-operations*.tgz &&
          mv package node_modules/@api3/operations
      - name: Translate Operations Data
        run: yarn prepare-data

      # This step uses the REACT_APP ENVs above
      - name: Build the API3 Explorer
        run: yarn build
      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Upload JSON Payloads with commit hash to S3
        run: aws s3 cp build s3://operations-development/${{ github.sha }}/explorer --acl public-read --recursive
#      - name: Keep the PR Comment Updated
#        uses: thollander/actions-comment-pull-request@v1
#        with:
#          message: 'You can view a preview of the API3 Explorer [here](https://operations-development.s3.amazonaws.com/${{ github.sha }}/explorer/index.html)'
#          comment_includes: 'You can view a preview of the API3 Explorer '
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  chain-verification:
    name: Chain verification
    runs-on: ubuntu-latest
    steps:
      - name: Clone
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.TARGET_NODE_VERSION }}
          cache: 'yarn'
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Verify SubscriptionIds on chain
        run: yarn check-subscriptions
      - name: Verify DAPI Name on chain
        run: yarn check-dapi-name
      - name: Verify DapiServer allowed readers on chain
        run: yarn check-policy-readers
